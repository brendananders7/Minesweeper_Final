@model Minesweeper_Web_App.Models.GameModel

@{
    Layout = "~/Views/Shared/_GameLayout.cshtml";
}

<head>
    <style>
        #game_button {
            border-radius: 2px;
            display: flex;
            min-width: 25px;
            min-height: 25px;
            width: calc(8.333333vw - 70px);
            height: calc(8.33333333vw - 70px);
            position: relative;
            background-color: lightgray;
            color:transparent;
        }

        #visited_button {
            display: flex;
            min-width: 25px;
            min-height: 25px;
            width: calc(8.333333vw - 70px);
            height: calc(8.33333333vw - 70px);
            position: relative;
            background-color: whitesmoke;
            border: 1px solid grey;
            color: black;
            text-align:center;
        }

        #bomb_button {
            display: flex;
            min-width: 25px;
            min-height: 25px;
            width: calc(8.333333vw - 70px);
            height: calc(8.33333333vw - 70px);
            position: relative;
            border: 1px solid grey;
            background-image: url(../../Images/bomb.png);
            background-size: 100%;
        }

        #game_button:hover {
            background-color: white;
        }
        .flex-container{
            justify-content:center;
            display:flex;
            flex-direction: row;
            flex-wrap:nowrap;
            position:relative;
        }

        .grid-container{
            display:grid;  
            bottom:0;
        }

    </style>
</head>

<body>
    <div>Timer</div>

    <!--Minesweeper Grid Container-->
    <div class="grid-container">
        <!--ButtonClick Handler, this method displays the whole board based on cell
            properties-->
        @using (Html.BeginForm("HandleButtonClick", "Game"))
        {
            for (int i = 0; i < 12; i++)
            {
                <div class="flex-container">
                    @for (int j = 0; j < 12; j++)
                    {
                        //default game board
                        if (Model.board.theGrid[i, j].isVisited == false)
                        {
                            <button type="submit" name="mine" value="@i,@j" id="game_button"></button>
                        }

                        //bomb button
                        else if (Model.board.theGrid[i, j].isVisited == true && Model.board.theGrid[i, j].isLive == true)
                        {
                            <button type="submit" name="mine" id="bomb_button" disabled></button>
                        }

                        //visited, no neighbors
                        else if (Model.board.theGrid[i, j].isVisited == true && Model.board.theGrid[i, j].isLive == false && Model.board.theGrid[i, j].liveNeighbors == 0)
                        {
                            <button type="submit" name="mine" id="visited_button" disabled></button>
                        }

                        //visited, with neighbors
                        else if (Model.board.theGrid[i, j].isVisited == true && Model.board.theGrid[i, j].liveNeighbors != 0)
                        {
                            <button type="submit" name="mine" id="visited_button" disabled>@Model.board.theGrid[i, j].liveNeighbors</button>
                        }

                    }
                </div>
            }
        }

    </div>
</body>